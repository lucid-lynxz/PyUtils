[setting]
# 编译产物的输出目录的相对路径, 会自动拼接项目目录得到产物的实际路径: {project}/{output_rel_path}/{copy_item}
output_rel_path = app/build/outputs/apk/

# 每个项目产物最终要拷贝到的目标父目录, 会自动创建项目名作为子目录, 文件再复制进去
# 最终目标路径: {target_parent_path}/{project_name}/{copy_item_name}
target_parent_path =

# 若 {target_parent_path} 存在, 则重命名进行备份, False-直接清空
backup_old_target = True

#  每个项目拷贝完成发出钉钉通知时, 读取 {output_rel_path} 下的该文件内容, 一并透出到钉钉通知等
project_info_file =

# 是否使用zsh进行编译, True-zsh False-bash
use_zsh = True

# 编译拷贝操作都执行完成后, 额外执行的命令, 比如某个上传脚本: bash xxx/auto_up_download_files.sh
exec_cmd_after_all =

[projects]
# 项目绝对路径, 支持多个

[buildCmds]
# 遍历 [projects] 中的每个项目分支,进行编译打包
./gradlew :app:clean
./gradlew :app:assembleDebug
./gradlew :app:assembleDebugAndroidTest

[copy]
# 将每个 [projects] 路径下的某个文件拷贝到 {target_parent_path}/{project_name}/{file_name}
# 支持key=value 写法, 若value非空,则会将value作为文件名(也支持路径, 比如: a.txt=a/b/c.txt)
# 若value为空,则使用key的文件名作为目标文件名, 比如: a/b/c.txt 则最终保存为: {target_parent_path}/{project_name}/c.txt
Demo.apk
androidTest/debug/app-debug-androidTest.apk

[robot]
# 流程结束后用于发送给钉钉机器人的通知
# 钉钉机器人的access_token值,空表表示不通知
accessToken =
# 飞书自定义机器人token
# 会拼接成: https://open.feishu.cn/open-apis/bot/v2/hook/{feishuToken}
feishuToken =

# 钉钉群聊机器人开启加签模式后, 需要传入secret参数
secret =

# 群聊机器人安全设置添加的关键词信息,会拼接在消息开头, 钉钉/飞书均支持该属性
keyWord =

# 需要@的人员手机号，可多个，逗号分隔, 当前只支持钉钉机器人,飞书不支持
atPhone =

# 是否at所有人, 钉钉/飞书均支持
atAll = False

# 额外的信息,会拼接到keyword下方,钉钉/飞书均支持
extraInfo =

