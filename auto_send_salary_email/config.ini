[config]
# 总工资表配置信息, 通常不会变化
# 工资总表excel文件路径,建议是 xlsx 格式
# 支持目录或文件路径
# 1. 若是目录路径,则会列出目录下所有excel文件列表给用户选择
# 2. 若是excel文件路径,则直接使用
# 截图会存在excel所在目录下的 imageCache/{excel文件名} 子目录中
# 相对路径写法是相对 auto_send_salary_email/main.py 的
salaryPath = ../assets

# 工资总表sheet名称,若该表不存在,则会列出所有表名够用户选择
sheetName = 工资单汇总

# 每次开始截图时,是否清空已有 imageCache/{excel文件名} 目录重新截
# true-跳过已截图的员工 false-所有员工都重新截图
continueMode = True

# 标题区域范围, 拆分出来的每个工资条均需附上该标题栏
# 工资条的宽度会与标题宽度保持一致
headerRangeStr = A3:X4

# 每个人的工资信息行数, 默认一行,表示一个员工的工资信息占用一行数据
eachSalaryContentRowCnt = 1

# 表格最下方的 "小计" 行数, 该区域不会进行拆分(非个人工资数据区域)
# 以表格区域第一列最下方非空单元格开始计算
sumRowCnt = 2

# 总表拆分后的配置信息
# 每个员工的工资条增加间隔的空白行数, 默认0表示不间隔
eachGap = 0

# 是否为每人的工资条增加依次分页符,yes/no, 默认: yes
addRowPageBreak = yes

# 是否自动截图工资条信息,yes/no, 默认: yes, 仅windows系统支持
# 截图保存名称为: {姓名}_{邮箱}.png
autoTakeShot = yes

# 总表中,姓名所在列号, 用于截图拼接图片名, 格式:{姓名}_{邮箱}
nameColLetter = b

# 总表中, 邮箱信息所在列号, 用于截图用于截图拼接图片名
emailColLetter = y

# 截图后是否自动发送工资条信息到对方邮箱中,yes/no, 默认: yes
# 若截图存在失败的情况,会自动取消发送
autoSendMail = no

[mail]
# 以下是发送邮箱所需,若无需发送邮件,则可不配置
# 邮箱服务器, 默认使用qq邮箱
smtpServer = smtp.qq.com

# 服务器端口号 qq邮箱的smtp端口是587或465
smtpPort = 587

# 发件人邮箱地址, 如: 66666@qq.om
senderEmail =

# 邮箱密码或者授权码
senderPwd =

# 连续发送两次邮件之间的间隔,单位:秒, 避免被当作垃圾邮件
delaySec = 8

# 邮件主题内容, 会在后面拼接 "-{姓名}"
subject = 工资单