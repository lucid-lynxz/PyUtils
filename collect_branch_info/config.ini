[repository]
# 仓库信息
# 本地仓库路径
local =
# 远程仓库地址
remote =
# 首次clone仓库时使用的分支,存在即可
initBranch =


[setting]
# 设置分支信息的区间范围, 只提取该区间内的log信息, 包括首次提交和最后第一提交信息
# 左开右闭区间 (sinceDate, untilDate]

# 起始日期(不包括), 若放空或者早于分支的创建日期,则使用分支创建日期(不同分支可不同), 格式:yyyy-mm-dd
sinceDate =

# 结束日期(包括), 放空表示今天, 格式:yyyy-mm-dd
untilDate =

# 结果输出日志文件绝对路径
outputResultFile =

# 输出结果时使用的日期格式, 默认 %Y%m%d, 如: 20220620
outputDateFormat = %Y%m%d

# 不进行统计的分支名,可多个, 逗号分隔, 如: master,dev
excludeBranch =

# 是否只统计 [srcBranchInfo] 中指定的分支
# 若为False,则统计所有分支(剔除excludeBranch), 而[srcBranchInfo]提供源分支信息, 用于获取分支的创建时间
onlyCollectSrcBranchInfo = True

# onlyCollectSrcBranchInfo=False时有效, 表示最多提取的最近有提交记录的前N个分支信息,正数有效
maxBranchCount = 0

[srcBranchInfo]
# 待提取的分支名及其源分支名,支持多个,若放空,则提取所有分支信息(会剔除掉 {excludeBranch})
# 格式: 目标分支名=源分支名
# 如: developBranch=master, 表示从master分支checkout出的developBranch
# 若 '源分支' 名为空,表示未知或者无源分支
# '源分支' 信息一般需要开发人员主动记录
# 补充:
# 获取分支创建日期: git reflog show --date=iso , 该方要求: 在远程仓库创建新分支的同时clone到本地, 日期才准确, reflog依赖于本地git记录
# 获取分支最早一次提交信息: git log branchA..branchB  其中: branchA checkout 出了 branchB



