[get_log]
# 用于脚本: get_log.py
# 待提取的android日志所在父目录, 用于拼接相对路径, 若放空,则表示不支持相对路径拼接
parent_log_dir_in_phone =
# 提取日志后最终保存本机的父目录路径, 要求非空
# 提取日志后, 会保存在子目录中, 子目录名为: yyyymmdd_hhMMss_log, 如: 20220801_102438_log
save_dir = d:/log/

# 提取日志后需要删除的无用日志相对路径,如:  a/ 表示: {save_dir}/{yyyymmdd_hhMMss_log}/a/ 目录
# 支持多个文件,使用逗号分隔, 目录请以斜杠/反斜杠结尾
# 支持最后一级文件名中包含正则表达式,如: a/b.*c.*d/
remove_file =

# 提取后需要自动压缩的文件相对路径, 如: a/ 表示: {save_dir}/{yyyymmdd_hhMMss_log}/a/ 目录
compress_file =
# 压缩包单包最大大小,若超过,则分包压缩,支持的单位: b/k/m/g, 如: 100m 表示最大100M,放空表示不限制
compress_file_limit = 100m
# 压缩使用7zip工具, 此处填入7zip安装路径, 若为空,则不压缩
# 7z工具已内置到项目中了，支持windows/linux/macos平台，保持下面的写法即可
# 当然，也可用填入你本机已安装的其他7z版本路径
seven_zip_path = third_tools/7z/*/7z.exe
# 压缩时要剔除的文件信息(此时compress_file应为目录路径), 支持星号通配符,如: *.data
# 若要写完整路径,请 {compress_file} 开头, 如: {compress_file}/abc.txt
# 支持多个文件,使用逗号分隔
exclude_compress_file =

# 是否解密日志(需要本地已安装解密工具)
auto_decrypt_log = False

# 待提取的手机日志信息, 每个日志文件/目录一行, 目录路径以斜杠结尾
# [可选]可包含等号信息, 等号右边的值表示该文件要存储的相对路径, 若是目录路径请以斜杠结尾
# 如: key=value, 则表示把key日志文件提取并存储到: {save_dir}/{yyyymmdd_hhMMss_log}/{value} 中
# 支持两种格式:
# 1. 绝对路径, 以斜杠/反斜杠开头,  如: /sdcard/xxx/yyy.txt
# 2. 相对路径, 如: xxx.txt, 表示 {parent_log_dir_in_phone}/xxx.txt
# 示例:
# /sdcard/a.txt
# log/b.txt
# log/